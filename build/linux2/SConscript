#!python
import os

# import these variables from the parent build script
#Import('env', 'sources', 'static_libs', 'test_sources')
Import('env','SRC_PATH','buildroot','include_packages','core_packages','CURRENT_DIR','SDL2_LIB_PATH','SDL2_INCLUDE_PATH','buildroot','targetpath','builddir','lib_packages')

SDL2_LIB_PATH = '/usr/local/lib'
SDL2_INCLUDE_PATH = '/usr/local/include/SDL2'

print("**** Sub Script win32 Config Build")
#print(env)


#env.Append(CCFLAGS=['-DNDEBUG'])
#env.Append(LINKFLAGS=['-s'])
#env.Append(CCFLAGS=['-DLINUX'])

#env.Append(LINKFLAGS=['sdl-config --cflags'])

env.Append(LDFLAGS=['-ldl'])

include_packages.append(CURRENT_DIR + os.sep +'src')
include_packages.append(CURRENT_DIR + os.sep +'src/vwen')

#print(CURRENT_DIR + os.sep +'src')

include_packages.append(CURRENT_DIR + os.sep +'api/include')
include_packages.append(CURRENT_DIR + os.sep +'api/include/glad')
include_packages.append(CURRENT_DIR + os.sep +'api/include/imgui')

#print('==================')
#print('api/include/glad')

#core_packages.append('vwen')

lib_packages.append('imgui')
lib_packages.append('glad')
#lib_packages.append('SDL2main')
lib_packages.append('SDL2')
lib_packages.append('libdl') #need this to work

#lib_packages.append('sdl2-config --libs') #
#/lib/i386-linux-gnu
#--add list
lib_packages += core_packages
include_packages +=core_packages


#env.Append(LINKFLAGS=['/SUBSYSTEM:CONSOLE']) #work here
#env.Append(LINKFLAGS=['/NODEFAULTLIB:library']) #does not work here

#/NODEFAULTLIB:library
#env.AppendUnique(CXXFLAGS=["/MD","/EHsc"])

#env.Append(LINKFLAGS=['/SUBSYSTEM:CONSOLE']) #SDL2 need this
for basename in core_packages:
	include_packages.append(CURRENT_DIR + os.sep + SRC_PATH + os.sep + basename) #header file basefile.h
	#pass
#print("Include:")
include_packages.append('/user/include/c++/6')
include_packages.append(SDL2_INCLUDE_PATH)
#print(include_packages)
env.Append(CPPPATH=include_packages) #SDL2, Imgui, Gl3w
#build lib file

env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'vwen',Glob(CURRENT_DIR + os.sep +'src/vwen/*.cpp')) #Gl3w

#--gl
#env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'glad',Glob(CURRENT_DIR + os.sep +'api/include/glad/*.c'),LDFLAGS="-Wl,--no-as-needed") #Glad
env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'glad',Glob(CURRENT_DIR + os.sep +'api/include/glad/*.c'))
#print((CURRENT_DIR + os.sep +'api/include/glad/'))
#env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'gl3w',Glob(CURRENT_DIR + os.sep +'api\\gl3w\\GL\\*.c')) #Gl3w
#env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'glfw3',CURRENT_DIR + os.sep + "api\\glfw\\lib-vs2015\\glfw3dll.lib") #glfw3

env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + 'imgui',Glob(CURRENT_DIR + os.sep + "api/include/imgui/*.cpp")) #imgui
#--sdl2
#env.Library(CURRENT_DIR + os.sep +buildroot + os.sep + 'SDL2','/usr/local/lib/libSDL2.a') #
#env.Library(CURRENT_DIR + os.sep +buildroot + os.sep + 'SDL2main','/usr/local/lib/libSDL2main.a') #
#env.Library(buildroot + os.sep + 'SDL2', "C:\\SDL2-2.0.5\\lib\\x86\\SDL2.lib") #

#env.Library(buildroot + os.sep + 'libSDL2', '/home/lightnet/SDL2-2.0.5/build/build/libSDL2.a') #
#env.Library(buildroot + os.sep + 'SDL2main',"C:\\SDL2-2.0.5\\lib\\x86\\SDL2main.lib") #
#env.Library(buildroot + os.sep + 'SDL2test',"C:\\SDL2-2.0.5\\lib\\x86\\SDL2test.lib") #

for basename in core_packages:
	env.Library(CURRENT_DIR + os.sep + buildroot + os.sep + basename, Glob(CURRENT_DIR + os.sep + SRC_PATH + os.sep + basename + os.sep + '*.cpp')) #core nodes
	#pass
#print(core_packages)
#--SDL2
#env.Install(CURRENT_DIR + os.sep + buildroot,"/usr/local/lib/libSDL2-2.0.so.0") #copy dll to output bin
#env.Install(CURRENT_DIR + os.sep + buildroot,"/usr/local/lib/libSDL2.so") #copy dll to output bin

#env.Install(CURRENT_DIR + os.sep + buildroot,"/usr/local/lib/libSDL2.a") #copy dll to output bin

#env.Install(CURRENT_DIR + os.sep + buildroot,"/usr/local/lib/libSDL2.so") #copy dll to output bin
#env.Install(CURRENT_DIR + os.sep + buildroot,"/home/lightnet/SDL2-2.0.5/build/build/libSDL2.so") #copy dll to output bin
#--glfw3
#env.Install(CURRENT_DIR + os.sep + buildroot,CURRENT_DIR + os.sep + "api\\glfw\\lib-vs2015\\glfw3.dll") #copy dll to output bin

#print("LIBS:")
#print(lib_packages)
#print("Bin:")
#print(buildroot)
#print("Main:",builddir + os.sep + '*.cpp')

#env.Append(CCFLAGS=['-D_REENTRANT'])
#env.Append(LINKFLAGS=['-Wno-undef'])

env.Append(LD_LIBRARY_PATH='/usr/local/lib')

#env.Append(CCFLAGS=['sdl2-config --cflags --libs sdl2'])


#env.Append(LINKFLAGS=['/usr/local/bin/sdl2-config'])
env.Append(CCFLAGS=['/usr/local/bin/sdl2-config'])

#env.Append(CXXFLAGS=['pkg-config'])

env.Program(CURRENT_DIR + os.sep +targetpath, Glob(CURRENT_DIR + os.sep +builddir + os.sep + '*.cpp'),
LIBS=lib_packages,
LIBPATH=['/usr/lib','/usr/local/lib',CURRENT_DIR + os.sep + 'src', CURRENT_DIR + os.sep + buildroot, SDL2_LIB_PATH]#,
#CXXFLAGS=['/NODEFAULTLIB:library']
)
print(CURRENT_DIR + os.sep + buildroot)
print(CURRENT_DIR + os.sep + 'src')


